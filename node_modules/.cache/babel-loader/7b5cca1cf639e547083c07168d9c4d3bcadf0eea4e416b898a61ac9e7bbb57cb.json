{"ast":null,"code":"var _jsxFileName = \"/Users/divyamanirajan/temp/OverwatchCharacterSelector/overwatch-character-selector/src/components/TankChars.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TankChars({\n  selectedChars,\n  setSelectedChars\n}) {\n  const tankChars = ['D.Va', 'Doomfist', 'Junker Queen', 'Mauga', 'Orisa', 'Ramattra', 'Reinhardt', 'Roadhog', 'Sigma', 'Winston', 'Wrecking Ball', 'Zarya'];\n  const handleLabelClick = char => {\n    if (selectedChars.includes(char)) {\n      // Remove character if already selected\n      setSelectedChars(selectedChars.filter(selectedChar => selectedChar !== char));\n    } else {\n      // Add character if not already selected\n      setSelectedChars([...selectedChars, char]);\n    }\n  };\n  const handleSelectAllClick = () => {\n    setSelectedChars(tankChars);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"allSelect\",\n        children: \"Select All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"allUnselect\",\n        children: \"Unselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), tankChars.map((tank, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      onClick: () => handleLabelClick(tank),\n      className: `label ${selectedChars.includes(tank) ? 'selected' : 'unselected'}` // Apply classes conditionally\n      ,\n      children: tank\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n_c = TankChars;\nvar _c;\n$RefreshReg$(_c, \"TankChars\");","map":{"version":3,"names":["TankChars","selectedChars","setSelectedChars","tankChars","handleLabelClick","char","includes","filter","selectedChar","handleSelectAllClick","_jsxDEV","_Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","tank","index","onClick","_c","$RefreshReg$"],"sources":["/Users/divyamanirajan/temp/OverwatchCharacterSelector/overwatch-character-selector/src/components/TankChars.js"],"sourcesContent":["\nexport default function TankChars({selectedChars, setSelectedChars}) {\n    const tankChars = [\n        'D.Va',\n        'Doomfist',\n        'Junker Queen',\n        'Mauga',\n        'Orisa',\n        'Ramattra',\n        'Reinhardt',\n        'Roadhog',\n        'Sigma',\n        'Winston',\n        'Wrecking Ball',\n        'Zarya'\n    ];\n\n    const handleLabelClick = (char) => {\n        if (selectedChars.includes(char)) {\n            // Remove character if already selected\n            setSelectedChars(selectedChars.filter(selectedChar => selectedChar !== char));\n        } else {\n            // Add character if not already selected\n            setSelectedChars([...selectedChars, char]);\n        }\n    }\n\n    const handleSelectAllClick = () => {\n        setSelectedChars(tankChars)       \n    }\n\n    return (\n        <>\n\n        <div className=\"typeTitle\">\n            <h4>Tank</h4>\n            <button className=\"allSelect\">Select All</button>\n            <button className=\"allUnselect\">Unselect All</button>\n        </div>  \n\n        {tankChars.map((tank, index) => (\n            <label \n                key={index} \n                onClick={() => handleLabelClick(tank)}\n                className={`label ${selectedChars.includes(tank) ? 'selected' : 'unselected'}`} // Apply classes conditionally\n                >{tank}</label>\n        ))}\n    \n        </>\n    );\n}"],"mappings":";;AACA,eAAe,SAASA,SAASA,CAAC;EAACC,aAAa;EAAEC;AAAgB,CAAC,EAAE;EACjE,MAAMC,SAAS,GAAG,CACd,MAAM,EACN,UAAU,EACV,cAAc,EACd,OAAO,EACP,OAAO,EACP,UAAU,EACV,WAAW,EACX,SAAS,EACT,OAAO,EACP,SAAS,EACT,eAAe,EACf,OAAO,CACV;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,IAAIJ,aAAa,CAACK,QAAQ,CAACD,IAAI,CAAC,EAAE;MAC9B;MACAH,gBAAgB,CAACD,aAAa,CAACM,MAAM,CAACC,YAAY,IAAIA,YAAY,KAAKH,IAAI,CAAC,CAAC;IACjF,CAAC,MAAM;MACH;MACAH,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEI,IAAI,CAAC,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IAC/BP,gBAAgB,CAACC,SAAS,CAAC;EAC/B,CAAC;EAED,oBACIO,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBAEAF,OAAA;MAAKG,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBF,OAAA;QAAAE,QAAA,EAAI;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbP,OAAA;QAAQG,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDP,OAAA;QAAQG,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EAELd,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBV,OAAA;MAEIW,OAAO,EAAEA,CAAA,KAAMjB,gBAAgB,CAACe,IAAI,CAAE;MACtCN,SAAS,EAAE,SAASZ,aAAa,CAACK,QAAQ,CAACa,IAAI,CAAC,GAAG,UAAU,GAAG,YAAY,EAAG,CAAC;MAAA;MAAAP,QAAA,EAC9EO;IAAI,GAHDC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGI,CACrB,CAAC;EAAA,eAEA,CAAC;AAEX;AAACK,EAAA,GAjDuBtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}