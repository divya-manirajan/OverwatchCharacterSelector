{"ast":null,"code":"var _jsxFileName = \"/Users/divyamanirajan/temp/OverwatchCharacterSelector/overwatch-character-selector/src/components/TankChars.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TankChars({\n  selectedChars,\n  setSelectedChars\n}) {\n  const tankChars = ['D.Va', 'Doomfist', 'Junker Queen', 'Mauga', 'Orisa', 'Ramattra', 'Reinhardt', 'Roadhog', 'Sigma', 'Winston', 'Wrecking Ball', 'Zarya'];\n  const handleLabelClick = char => {\n    if (!selectedChars.includes(char)) {\n      setSelectedChars([...selectedChars, char]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tank Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), tankChars.map((tank, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      onClick: () => handleLabelClick(tank),\n      children: tank\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n_c = TankChars;\nvar _c;\n$RefreshReg$(_c, \"TankChars\");","map":{"version":3,"names":["TankChars","selectedChars","setSelectedChars","tankChars","handleLabelClick","char","includes","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tank","index","onClick","_c","$RefreshReg$"],"sources":["/Users/divyamanirajan/temp/OverwatchCharacterSelector/overwatch-character-selector/src/components/TankChars.js"],"sourcesContent":["export default function TankChars({selectedChars, setSelectedChars}) {\n    const tankChars = [\n        'D.Va',\n        'Doomfist',\n        'Junker Queen',\n        'Mauga',\n        'Orisa',\n        'Ramattra',\n        'Reinhardt',\n        'Roadhog',\n        'Sigma',\n        'Winston',\n        'Wrecking Ball',\n        'Zarya'\n    ];\n\n    const handleLabelClick = (char) => {\n        if(!selectedChars.includes(char)){\n            setSelectedChars([...selectedChars, char])\n        }\n    }\n\n    return (\n        <>\n        <h3>Tank Characters</h3>\n        {tankChars.map((tank, index) => (\n            <label key={index} onClick={() => handleLabelClick(tank)}>{tank}</label>\n        ))}\n    \n        </>\n    );\n}"],"mappings":";;AAAA,eAAe,SAASA,SAASA,CAAC;EAACC,aAAa;EAAEC;AAAgB,CAAC,EAAE;EACjE,MAAMC,SAAS,GAAG,CACd,MAAM,EACN,UAAU,EACV,cAAc,EACd,OAAO,EACP,OAAO,EACP,UAAU,EACV,WAAW,EACX,SAAS,EACT,OAAO,EACP,SAAS,EACT,eAAe,EACf,OAAO,CACV;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,IAAG,CAACJ,aAAa,CAACK,QAAQ,CAACD,IAAI,CAAC,EAAC;MAC7BH,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEI,IAAI,CAAC,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIE,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACAF,OAAA;MAAAE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBV,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBT,OAAA;MAAmBU,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACW,IAAI,CAAE;MAAAN,QAAA,EAAEM;IAAI,GAAnDC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsD,CAC1E,CAAC;EAAA,eAEA,CAAC;AAEX;AAACK,EAAA,GA/BuBlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}